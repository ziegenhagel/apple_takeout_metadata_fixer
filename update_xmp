#!/bin/bash

# Funktion zur Konvertierung von GPS-Koordinaten
convert_gps() {
    local coord=$1
    local ref=$2
    if [[ -z "$coord" || -z "$ref" ]]; then
        echo "Unbekannt"
        return
    fi
    local deg=$(echo $coord | cut -d'.' -f1)
    local min=$(echo "($coord - $deg) * 60" | bc -l)
    printf "%s°%s'%s\"%s" $deg ${min%.*} $(printf "%.4f" "$(echo "($min - ${min%.*}) * 60" | bc -l)") $ref
}

convert_date() {
    local input_date=$1
    local converted_date

    # Entferne die Zeitzone, falls vorhanden
    input_date=$(echo "$input_date" | sed -E 's/([+-][0-9]{2}):([0-9]{2})$/\1\2/')

    # Versuche verschiedene Datumsformate
    for format in "%Y-%m-%dT%H:%M:%S%z" "%Y-%m-%dT%H:%M:%S" "%Y-%m-%d %H:%M:%S" "%Y:%m:%d %H:%M:%S"; do
        converted_date=$(date -j -f "$format" "$input_date" "+%Y%m%d%H%M.%S" 2>/dev/null)
        if [[ $? -eq 0 ]]; then
            echo "$converted_date"
            return 0
        fi
    done

    echo "Fehler: Konnte Datum nicht konvertieren: $input_date" >&2
    return 1
}

# Funktion zur Aktualisierung der Metadaten und des Zeitstempels
update_metadata() {
    local file=$1
    local xmp_file=$2
    
    # Extrahieren der Metadaten aus der XMP-Datei mit Namespace-Berücksichtigung
    local create_date=$(xmllint --xpath "string(//*[local-name()='DateCreated'])" "$xmp_file" 2>/dev/null)
    local gps_lat=$(xmllint --xpath "string(//*[local-name()='GPSLatitude'])" "$xmp_file" 2>/dev/null)
    local gps_lat_ref=$(xmllint --xpath "string(//*[local-name()='GPSLatitudeRef'])" "$xmp_file" 2>/dev/null)
    local gps_lon=$(xmllint --xpath "string(//*[local-name()='GPSLongitude'])" "$xmp_file" 2>/dev/null)
    local gps_lon_ref=$(xmllint --xpath "string(//*[local-name()='GPSLongitudeRef'])" "$xmp_file" 2>/dev/null)
    local persons=$(xmllint --xpath "//*[local-name()='subject']/*[local-name()='Seq']/*[local-name()='li']/text()" "$xmp_file" 2>/dev/null | tr '\n' ',' | sed 's/,$//')

    # Konvertieren der GPS-Koordinaten
    local gps_lat_conv=$(convert_gps "$gps_lat" "$gps_lat_ref")
    local gps_lon_conv=$(convert_gps "$gps_lon" "$gps_lon_ref")

    echo "  Erstellungsdatum: ${create_date:-Unbekannt}"
    echo "  GPS: $gps_lat_conv, $gps_lon_conv"
    echo "  Erkannte Personen: ${persons:-Keine}"

    # Aktualisieren der Metadaten mit exiftool
    exiftool -overwrite_original \
        ${create_date:+"-DateTimeOriginal=$create_date"} \
        ${gps_lat:+"-GPSLatitude=$gps_lat_conv"} \
        ${gps_lon:+"-GPSLongitude=$gps_lon_conv"} \
        ${persons:+"-XPKeywords=$persons"} \
        "$file"

    # Setzen des Dateizeitstempels
    if [[ -n "$create_date" ]]; then
        touch_date=$(convert_date "$create_date")
        if [[ $? -eq 0 ]]; then
            touch -t "$touch_date" "$file"
            echo "  Dateizeitstempel aktualisiert auf: $create_date"
        else
            echo "  $touch_date"  # Gibt die Fehlermeldung aus
        fi
    fi
}

# Hauptskript
find . -type f -name "*.xmp" | while read xmp_file; do
    dir=$(dirname "$xmp_file")
    base=$(basename "$xmp_file" .xmp)
    
    echo "Verarbeite XMP-Datei: $xmp_file"
    
    # Suche nach zugehörigen Dateien (case-insensitive)
    for ext in jpg jpeg heic mov png; do
        file=$(find "$dir" -maxdepth 1 -type f -iname "${base}.${ext}")
        if [[ -n "$file" ]]; then
            echo "Gefundene zugehörige Datei: $file"
            update_metadata "$file" "$xmp_file"
        fi
    done
    
    echo "------------------------"
done
